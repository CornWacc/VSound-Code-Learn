<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.corn.vsound.dao.mapper.CodeMethodMapper" >

  <resultMap id="BaseResultMap" type="com.corn.vsound.dao.entity.CodeMethod" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="method_id" property="methodId" jdbcType="VARCHAR" javaType="String" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="method_usage" property="methodUsage" jdbcType="VARCHAR" />
    <result column="method_result" property="methodResult" jdbcType="VARCHAR" />
    <result column="method_base_type" property="methodBaseType" jdbcType="VARCHAR" />
    <result column="method_common_use" property="methodCommonUse" jdbcType="VARCHAR" />
    <result column="method_is_overwrite" property="methodIsOverwrite" jdbcType="CHAR" />
    <result column="method_is_construct" property="methodIsConstruct" jdbcType="CHAR" />
    <result column="method_action_scope" property="methodActionScope" jdbcType="VARCHAR" />
    <result column="from_code_id" property="fromCodeId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="CodeMethodOrderResultMap" type="com.corn.vsound.dao.dto.CodeMethodOrderDto">
    <result column="method_id" property="methodId" jdbcType="VARCHAR" javaType="String" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="method_usage" property="methodUsage" jdbcType="VARCHAR" />
    <result column="method_result" property="methodResult" jdbcType="VARCHAR" />
    <result column="method_base_type" property="methodBaseType" jdbcType="VARCHAR" />
    <result column="method_common_use" property="methodCommonUse" jdbcType="VARCHAR" />
    <result column="method_is_overwrite" property="methodIsOverwrite" jdbcType="CHAR" />
    <result column="method_is_construct" property="methodIsConstruct" jdbcType="CHAR" />
    <result column="method_action_scope" property="methodActionScope" jdbcType="VARCHAR" />
    <result column="from_code_id" property="fromCodeId" jdbcType="VARCHAR" />
    <collection column="code_method_id" property="orderList" ofType="com.corn.vsound.dao.info.CodeMethodOrderDtoInfo">
      <result column="code_method_order_id" property="codeMethodOrderId" jdbcType="VARCHAR"></result>
      <result column="code_method_order_name" property="codeMethodOrderName" jdbcType="VARCHAR"></result>
      <result column="code_method_order_class_type" property="codeMethodOrderClassType" jdbcType="VARCHAR"></result>
      <result column="code_method_order_type" property="codeMethodOrderType" jdbcType="VARCHAR"></result>
      <result column="code_method_id" property="codeMethodId" jdbcType="VARCHAR"></result>
    </collection>
    </resultMap>

  <sql id="Base_Column_List" >
    method_id, method_name, method_usage, method_result, method_base_type, method_common_use,
    method_is_overwrite, method_is_construct, method_action_scope, from_code_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from code_method
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from code_method
    where method_id = #{methodId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.corn.vsound.dao.entity.CodeMethod" >
    insert into code_method (id, method_id, method_name, 
      method_usage, method_result, method_base_type, 
      method_common_use, method_is_overwrite, method_is_construct, 
      method_action_scope, from_code_id, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{methodId,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{methodUsage,jdbcType=VARCHAR}, #{methodResult,jdbcType=VARCHAR}, #{methodBaseType,jdbcType=VARCHAR}, 
      #{methodCommonUse,jdbcType=VARCHAR}, #{methodIsOverwrite,jdbcType=CHAR}, #{methodIsConstruct,jdbcType=CHAR}, 
      #{methodActionScope,jdbcType=VARCHAR}, #{fromCodeId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.corn.vsound.dao.entity.CodeMethod" >
    insert into code_method
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="methodId != null" >
        method_id,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="methodUsage != null" >
        method_usage,
      </if>
      <if test="methodResult != null" >
        method_result,
      </if>
      <if test="methodBaseType != null" >
        method_base_type,
      </if>
      <if test="methodCommonUse != null" >
        method_common_use,
      </if>
      <if test="methodIsOverwrite != null" >
        method_is_overwrite,
      </if>
      <if test="methodIsConstruct != null" >
        method_is_construct,
      </if>
      <if test="methodActionScope != null" >
        method_action_scope,
      </if>
      <if test="fromCodeId != null" >
        from_code_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="methodId != null" >
        #{methodId,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodUsage != null" >
        #{methodUsage,jdbcType=VARCHAR},
      </if>
      <if test="methodResult != null" >
        #{methodResult,jdbcType=VARCHAR},
      </if>
      <if test="methodBaseType != null" >
        #{methodBaseType,jdbcType=VARCHAR},
      </if>
      <if test="methodCommonUse != null" >
        #{methodCommonUse,jdbcType=VARCHAR},
      </if>
      <if test="methodIsOverwrite != null" >
        #{methodIsOverwrite,jdbcType=CHAR},
      </if>
      <if test="methodIsConstruct != null" >
        #{methodIsConstruct,jdbcType=CHAR},
      </if>
      <if test="methodActionScope != null" >
        #{methodActionScope,jdbcType=VARCHAR},
      </if>
      <if test="fromCodeId != null" >
        #{fromCodeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.corn.vsound.dao.dto.CodeMethodOrderDto">
    update code_method
    <set>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodUsage != null" >
        method_usage = #{methodUsage,jdbcType=VARCHAR},
      </if>
      <if test="methodResult != null" >
        method_result = #{methodResult,jdbcType=VARCHAR},
      </if>
      <if test="methodBaseType != null" >
        method_base_type = #{methodBaseType,jdbcType=VARCHAR},
      </if>
      <if test="methodCommonUse != null" >
        method_common_use = #{methodCommonUse,jdbcType=VARCHAR},
      </if>
      <if test="methodIsOverwrite != null" >
        method_is_overwrite = #{methodIsOverwrite,jdbcType=CHAR},
      </if>
      <if test="methodIsConstruct != null" >
        method_is_construct = #{methodIsConstruct,jdbcType=CHAR},
      </if>
      <if test="methodActionScope != null" >
        method_action_scope = #{methodActionScope,jdbcType=VARCHAR},
      </if>
      <if test="fromCodeId != null" >
        from_code_id = #{fromCodeId,jdbcType=VARCHAR},
      </if>
    </set>
    where method_id = #{methodId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.corn.vsound.dao.entity.CodeMethod" >
    update code_method
    set method_id = #{methodId,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      method_usage = #{methodUsage,jdbcType=VARCHAR},
      method_result = #{methodResult,jdbcType=VARCHAR},
      method_base_type = #{methodBaseType,jdbcType=VARCHAR},
      method_common_use = #{methodCommonUse,jdbcType=VARCHAR},
      method_is_overwrite = #{methodIsOverwrite,jdbcType=CHAR},
      method_is_construct = #{methodIsConstruct,jdbcType=CHAR},
      method_action_scope = #{methodActionScope,jdbcType=VARCHAR},
      from_code_id = #{fromCodeId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findCodeMethodListByCodeId" resultMap="BaseResultMap">
   select
    cm.method_id,
    cm.method_name,
    cm.method_usage,
    cm.method_result,
    cm.method_base_type,
    cm.method_common_use,
    cm.method_is_overwrite,
    cm.method_is_construct,
    cm.method_action_scope,
    cm.from_code_id
    from
    code_method cm
    where
    cm.from_code_id = #{codeId}
  </select>

  <select id="findCodeMethodByMethodId" resultMap="CodeMethodOrderResultMap">
    select
    cm.method_id,
    cm.method_name,
    cm.method_usage,
    cm.method_result,
    cm.method_base_type,
    cm.method_common_use,
    cm.method_is_overwrite,
    cm.method_is_construct,
    cm.method_action_scope,
    cm.from_code_id,
    cmo.code_method_id,
    cmo.code_method_order_class_type,
    cmo.code_method_order_id,
    cmo.code_method_order_name
    from
    code_method cm
    left join
    code_method_order cmo on cm.method_id = cmo.code_method_id
    where
    method_id = #{methodId}
  </select>

  <select id="findCodeMethodByMethodIds" resultMap="CodeMethodOrderResultMap">
    select
    cm.method_id,
    cm.method_name,
    cm.method_usage,
    cm.method_result,
    cm.method_base_type,
    cm.method_common_use,
    cm.method_is_overwrite,
    cm.method_is_construct,
    cm.method_action_scope,
    cm.from_code_id,
    cmo.code_method_id,
    cmo.code_method_order_class_type,
    cmo.code_method_order_id,
    cmo.code_method_order_name
    from
    code_method cm
    left join
    code_method_order cmo on cm.method_id = cmo.code_method_id
    where
    cm.method_id
    in
    <foreach collection="methods" open="(" close=")" item="item" separator=",">
      #{item.methodId}
    </foreach>
  </select>

  <delete id="deleteCodeMethodsByCodeIds">
    delete from code_method
    where code_id in
    <foreach collection="codeIds" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </delete>
</mapper>